<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Leaderboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="icon" href="/logo.png" type="image/png">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"> <!-- Bootstrap CSS -->

    <style>
        html, body {
            overflow-x: hidden; 
            margin: 0;
            padding: 0; 
        }

        .nav {
            margin-top: 0;
            position: fixed;
            justify-content: center;
            width: 100%;
            top: 0;
            background-color: #4a90e2;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            z-index: 1000; 
        }

        .nav-content {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 1rem;
            gap: 16px;
        }

        h1 {
            font-size: 2.5rem;
            font-weight: 700;
            color: #fff;
            margin: 0;
        }

        .users {
            margin-top: 160px; 
        }

        ul {
            list-style: none;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        li {
            width: 80%;
            max-width: 500px;
            color: #fff;
            padding: 1.5rem;
            margin-bottom: 1rem;
            border-radius: 10px;
            font-size: 1.5rem;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s, box-shadow 0.2s;
        }

        li:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        li span {
            font-weight: bold;
        }

        li i {
            margin-right: 1rem;
            font-size: 1.5rem;
        }

        .top-user {
            background: linear-gradient(145deg, 
                #fdd835, 
                #fbc02d 20%, 
                #ffeb3b 40%, 
                #fbc02d 60%, 
                #ff9800 80%, 
                #f57c00 100% 
            );
            color: #000;
        }

        .top-user i {
            color: #000;
        }

        .top-user .fa-medal {
            margin-left: 10px;
            color: black;
        }

        .play-again-btn {
            width: fit-content;
            padding: 0.5rem 1rem;
            background-color: #fff;
            color: #3498db;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            right: 1rem;
        }
        
        .play-again-btn:hover {
            background-color: #fff;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
            transform: scale(1.05);
            transition: transform 0.2s ease-in-out; 
        }

        /* Back to top button */
        #btn-back-to-top {
            position: fixed;
            bottom: 20px;
            right: 20px;
            display: none; /* Initially hidden */
            width: 60px;  
            height: 60px; 
            border-radius: 50%; 
            background-color: #4a90e2; 
            color: white; 
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); 
            border: none; 
            cursor: pointer; 
            transition: background-color 0.3s, box-shadow 0.3s, transform 0.5s; /* Added transform for smooth effect */
        }

        /* Arrow animation */
        @keyframes moveUp {
            0% {
                transform: translateY(20px); /* Start below */
                opacity: 0; /* Start invisible */
            }
            100% {
                transform: translateY(0); /* Move to original position */
                opacity: 1; /* Fully visible */
            }
        }

        /* Show the button with animation */
        #btn-back-to-top.show {
            display: block; /* Change display to block when class is added */
            animation: moveUp 0.5s ease-out forwards; /* Animation for appearing */
        }

        #btn-back-to-top:hover {
            background-color: #4a90e2; 
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4); 
            transform: scale(1.1); /* Scale up slightly on hover for effect */
        }

        #btn-back-to-top i {
            font-size: 24px; 
        }

        @media (max-width: 768px) {
            h1 {
                font-size: 2rem;
            }

            li {
                font-size: 1.2rem;
                padding: 1rem;
            }

            .users {
                margin-top: 138px; 
            }
        }

        @media (max-width: 480px) {
            h1 {
                font-size: 1.8rem;
            }

            li {
                font-size: 1rem;
                padding: 0.8rem;
            }

            li i {
                font-size: 1.2rem;
            }

            .users {
                margin-top: 135px; 
            }

            .nav-content {
                gap: 10px;
            }
        }

        /* Pagination styles */
        /* .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .pagination span {
            align-self: center;
            margin: 0 10px;
        } */

         /* Pagination styles */
         .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }

        .pagination a {
            color: #3498db;
            padding: 8px 16px;
            text-decoration: none;
            border: 1px solid #3498db;
            margin: 0 5px;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .pagination a.active {
            background-color: #3498db;
            color: white;
        }

        .pagination a:hover {
            background-color: #2980b9;
            color: white;
        }
    </style>
</head>
<body>
    <!-- Back to top button -->
    <button type="button" class="btn btn-floating btn-lg" id="btn-back-to-top">
        <i class="fas fa-arrow-up"></i>
    </button>

    <nav class="nav">
        <div class="nav-content">
            <h1>Leaderboard</h1>
            <% const url = 'main?username=' + encodeURIComponent(username); %>
            <button class="play-again-btn" id="playAgainBtn" onclick="window.location.href='<%= url %>'">Play again</button>
        </div>
    </nav>    

    <div class="users">
        <ul id="user-list">
            <% if (users.length === 0) { %>
                <li>No users available</li>
            <% } else { %>
                <% const colors = ['#e74c3c', '#3498db', '#2ecc71', '#f29143']; %>
                <% let topUser = users.reduce((prev, current) => (current.maxLevel > prev.maxLevel) ? current : prev); %>
                <% users.forEach((user, index) => { 
                    const color = colors[index % colors.length];
                    const isTopUser = user.username === topUser.username;
                %>
                <li class="<%= isTopUser ? 'top-user' : '' %>" style="background-color: <%= !isTopUser ? color : '' %>;">
                    <i class="fas fa-user"></i> 
                    <span><%= user.username %></span> - Highest Level: <span><%= user.maxLevel %></span>
                    <% if (isTopUser) { %>
                        <i class="fas fa-medal"></i>
                    <% } %>
                </li>
                <% }); %>
            <% } %>
        </ul>
    </div>

    <div class="pagination" id="pagination-controls">
        <button id="prevBtn" class="btn btn-primary" disabled>Previous</button>
        <span id="page-info"></span>
        <button id="nextBtn" class="btn btn-primary">Next</button>
    </div>

    <script>
        const users = <%- JSON.stringify(users) %>; // Pass users from the backend to the frontend
        const limit = 5; // Number of users per page
        let currentPage = 1; // Track the current page

        function renderPagination() {
            const paginationControls = document.getElementById('pagination-controls');
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');
            const pageInfo = document.getElementById('page-info');

            const totalPages = Math.ceil(users.length / limit);
            pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;

            prevBtn.disabled = currentPage === 1; // Disable prev button on first page
            nextBtn.disabled = currentPage === totalPages; // Disable next button on last page

            prevBtn.onclick = () => {
                if (currentPage > 1) {
                    currentPage--; // Go to previous page
                    renderUsers();
                    renderPagination();
                }
            };

            nextBtn.onclick = () => {
                if (currentPage < totalPages) {
                    currentPage++; // Go to next page
                    renderUsers();
                    renderPagination();
                }
            };
        }

        function renderUsers() {
            const userList = document.getElementById('user-list');
            userList.innerHTML = ''; // Clear previous user list

            const start = (currentPage - 1) * limit; // Calculate start index
            const end = Math.min(start + limit, users.length); // Calculate end index

            for (let i = start; i < end; i++) {
                const user = users[i];
                const isTopUser = user.username === users.reduce((prev, current) => (current.maxLevel > prev.maxLevel) ? current : prev).username;
                const li = document.createElement('li');
                li.className = isTopUser ? 'top-user' : '';
                li.style.backgroundColor = !isTopUser ? ['#e74c3c', '#3498db', '#2ecc71', '#f29143'][i % 4] : '';
                li.innerHTML = `<i class="fas fa-user"></i> 
                    <span>${user.username}</span> - Highest Level: <span>${user.maxLevel}</span>
                    ${isTopUser ? '<i class="fas fa-medal"></i>' : ''}`;
                userList.appendChild(li);
            }
        }

        // Initialize the leaderboard
        renderUsers();
        renderPagination();

        // Back to top button functionality
        const backToTopButton = document.getElementById("btn-back-to-top");
        window.onscroll = function () {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                backToTopButton.classList.add("show");
            } else {
                backToTopButton.classList.remove("show");
            }
        };

        backToTopButton.onclick = function () {
            window.scrollTo({
                top: 0,
                behavior: "smooth"
            });
        };
    </script>
</body>
</html>
